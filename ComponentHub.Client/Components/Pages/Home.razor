@attribute [Route(Routes.General.Home)]
@using ComponentHub.Client.Components.Features.Components
@using ComponentHub.Domain.Api
@using ComponentHub.ApiClients.Models
@inject ISnackbar Snackbar
@inject ComponentService ComponentService
@inject HttpClient HttpClient

<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h1" Color="Color.Primary">Welcome to the Component Hub</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudText>
            The Component Hub is your central location for sharing and discovering <MudLink Href="https://articles.warcraftlogs.com/help/what-are-report-components">Archon Report Components</MudLink>.
            These allow you to create in depth and shareable dashboards to analyze your gameplay.
             
            This feature is currently in closed alpha, access can be requested <MudLink Href="https://forms.gle/oFcWCMbgqDK2j2e69.">here</MudLink>.
        </MudText>        
    </MudCardContent>
</MudCard>

<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h2">Getting Started</MudText>    
    </MudCardHeader>
    <MudCardContent>
        <MudText>
            In order to use the Component Hub, you currently require an BattleNet account.
            This is used to register and login.
            Component Hub will not store any of your personal data, besides your BattleNet id and name.
            More login provider will be added in the future.
            
            After you created an account you can go <MudLink Href="@Routes.Components.Upload">here</MudLink> upload your first component
        </MudText>    
    </MudCardContent>
</MudCard>


@code
{
    private string _componentName = "SomeComponent";
    
    private async Task SendBadRequest()
    {
        await HttpClient.PutAsJsonAsync(Endpoints.Components.Create, new CreateComponentRequest(){Name = "asddddddddddddddddddddddddddddddddddddddddddddddddddddd", SourceCode = "", Language = Language.JS});
    }

    private async Task OpenBar() => Snackbar.Add("Test", Severity.Error);

    private async Task SendValidRequest()
    {
        await ComponentService.CreateComponent(new CreateComponentRequest(){Name = _componentName, Language = Language.JS, SourceCode = "My Source SourceCode"});
    }


}

